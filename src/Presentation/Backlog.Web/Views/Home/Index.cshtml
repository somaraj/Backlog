@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_LayoutHome.cshtml";
}

<div class="alert alert-warning alert-dismissible fade show" role="alert">
    <div class="fw-semibold">Holy guacamole!</div> You should check in on some of those fields below.
    <button class="btn-close" type="button" data-coreui-dismiss="alert" aria-label="Close"></button>
</div>

<div class="row g-4">
    <div class="col-12 col-sm-6 col-xl-4 col-xxl-3">
        <div class="card text-white bg-primary">
            <div class="card-body">
                <div class="fs-4 fw-semibold">89.9%</div>
                <div>Widget title</div>
                <div class="progress progress-white progress-thin my-2">
                    <div class="progress-bar" role="progressbar" style="width: 25%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
                </div><small class="text-white text-opacity-75">Widget helper text</small>
            </div>
        </div>
    </div>
    <!-- /.col-->
    <div class="col-12 col-sm-6 col-xl-4 col-xxl-3">
        <div class="card text-white bg-warning">
            <div class="card-body">
                <div class="fs-4 fw-semibold">12.124</div>
                <div>Widget title</div>
                <div class="progress progress-white progress-thin my-2">
                    <div class="progress-bar" role="progressbar" style="width: 25%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
                </div><small class="text-white text-opacity-75">Widget helper text</small>
            </div>
        </div>
    </div>
    <!-- /.col-->
    <div class="col-12 col-sm-6 col-xl-4 col-xxl-3">
        <div class="card text-white bg-danger">
            <div class="card-body">
                <div class="fs-4 fw-semibold">$98.111,00</div>
                <div>Widget title</div>
                <div class="progress progress-white progress-thin my-2">
                    <div class="progress-bar" role="progressbar" style="width: 25%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
                </div><small class="text-white text-opacity-75">Widget helper text</small>
            </div>
        </div>
    </div>
    <!-- /.col-->
    <div class="col-12 col-sm-6 col-xl-4 col-xxl-3">
        <div class="card text-white bg-info">
            <div class="card-body">
                <div class="fs-4 fw-semibold">2 TB</div>
                <div>Widget title</div>
                <div class="progress progress-white progress-thin my-2">
                    <div class="progress-bar" role="progressbar" style="width: 25%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
                </div><small class="text-white text-opacity-75">Widget helper text</small>
            </div>
        </div>
    </div>
    <!-- /.col-->
    <div class="col-md-12">
        <div class="card mt-4 mb-4">
            <div class="card-body">
                <div id="sked"></div>
            </div>
        </div>
    </div>
</div>
<div class="row row-cols-2">
    <div class="col">
        <div class="card mt-4 mb-4">
            <div class="card-body">
                <canvas id="canvas-1"></canvas>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card mt-4 mb-4">
            <div class="card-body">
                <canvas id="canvas-3"></canvas>
            </div>
        </div>
    </div>
</div>

<script>
    $(function(){
        const random = () => Math.round(Math.random() * 100);

        // eslint-disable-next-line no-unused-vars
        const lineChart = new Chart(document.getElementById('canvas-1'), {
            type: 'line',
            data: {
                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
                datasets: [{
                    label: 'My First dataset',
                    backgroundColor: 'rgba(220, 220, 220, 0.2)',
                    borderColor: 'rgba(220, 220, 220, 1)',
                    pointBackgroundColor: 'rgba(220, 220, 220, 1)',
                    pointBorderColor: '#fff',
                    data: [random(), random(), random(), random(), random(), random(), random()]
                }, {
                    label: 'My Second dataset',
                    backgroundColor: 'rgba(151, 187, 205, 0.2)',
                    borderColor: 'rgba(151, 187, 205, 1)',
                    pointBackgroundColor: 'rgba(151, 187, 205, 1)',
                    pointBorderColor: '#fff',
                    data: [random(), random(), random(), random(), random(), random(), random()]
                }]
            },
            options: {
                responsive: true
            }
        });

        // const doughnutChart = new Chart(document.getElementById('canvas-3'), {
        //     type: 'doughnut',
        //     data: {
        //         labels: ['Red', 'Green', 'Yellow'],
        //         datasets: [{
        //             data: [300, 50, 100],
        //             backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],
        //             hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']
        //         }]
        //     },
        //     options: {
        //         responsive: true
        //     }
        // });
        const ctx = document.getElementById('canvas-3').getContext('2d');
        const myChart = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ['Red', 'Blue', 'Yellow'],
                datasets: [{
                    data: [300, 50, 100],
                    backgroundColor: ['red', 'blue', 'yellow'],
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false
            }
        });

        var $sked = $('#sked').skedTape({
            caption: 'Cities',
            start: new Date(), // Timeline starts this date-time
            end: new Date(),       // Timeline ends this date-time
            showEventTime: true,     // Whether to show event start-end time
            showEventDuration: true, // Whether to show event duration
            locations: [
                { id: 1, name: 'San Francisco' }, // required properties only
                {
                    id: 'london',
                    name: 'Sydney',
                    order: 1, // optional sorting order
                    tzOffset: -10 * 60, // individual timezone (notice that minus sign)
                    userData: {} // optional some custom data to store
                },
            ],
            events: [
                {
                    name: 'Meeting 1',
                    location: 'london',
                    start: new Date(),
                    end: new Date()
                }
            ]
        });
    })
</script>